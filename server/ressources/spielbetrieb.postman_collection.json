{
	"info": {
		"_postman_id": "cace61da-a4fb-402a-9af3-ef2733c3ae51",
		"name": "Spielbetrieb",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "9603966"
	},
	"item": [
		{
			"name": "REST API Endpoint: auth/login",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"clement.vanstaen@gmail.com\",\n    \"password\": \"123456\",\n    \"remind\": true\n}"
				},
				"url": {
					"raw": "http://localhost:5017/auth/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "REST API Endpoint: auth/logout",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5017/auth/logout",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "REST API Endpoint: auth/access",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5017/auth/access",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"auth",
						"access"
					]
				}
			},
			"response": []
		},
		{
			"name": "REST API Endpoint: user/taken",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test\"\n}"
				},
				"url": {
					"raw": "http://localhost:5017/user/taken",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"user",
						"taken"
					]
				}
			},
			"response": []
		},
		{
			"name": "REST API Endpoint: user/email",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"test@test.com\"\n}"
				},
				"url": {
					"raw": "http://localhost:5017/user/email",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"user",
						"email"
					]
				}
			},
			"response": []
		},
		{
			"name": "REST API Endpoint: user/validtoken",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"token\": \"123\"\n}"
				},
				"url": {
					"raw": "http://localhost:5017/user/validtoken",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"user",
						"validtoken"
					]
				}
			},
			"response": []
		},
		{
			"name": "REST API Endpoint: user/emailverified",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjI4NjExNDI0LCJleHAiOjE2Mjg2OTc4MjR9.Lq3paHX3vWgV7FroiYbzXS2tVIG7mrf96EuvTE0FiGY\"\n}"
				},
				"url": {
					"raw": "http://localhost:5017/user/emailverified",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"user",
						"emailverified"
					]
				}
			},
			"response": []
		},
		{
			"name": "REST API Endpoint: newsletter/subscriberverified",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjI4NjExNDI0LCJleHAiOjE2Mjg2OTc4MjR9.Lq3paHX3vWgV7FroiYbzXS2tVIG7mrf96EuvTE0FiGY\"\n}"
				},
				"url": {
					"raw": "http://localhost:5017/newsletter/subscriberverified",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"newsletter",
						"subscriberverified"
					]
				}
			},
			"response": []
		},
		{
			"name": "REST API Endpoint: mail",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sendto\": \"clement.vanstaen@gmail.com\",\n    \"subject\": \"this is a test subject\",\n    \"body\": \"this is the email body\"\n}"
				},
				"url": {
					"raw": "http://localhost:5017/mail",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"mail"
					]
				}
			},
			"response": []
		},
		{
			"name": "REST API Endpoint: mail/recover",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sendto\": \"clement.vanstaen@gmail.com\"\n}"
				},
				"url": {
					"raw": "http://localhost:5017/mail/recover",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"mail",
						"recover"
					]
				}
			},
			"response": []
		},
		{
			"name": "REST API Endpoint: mail/emailverify",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sendto\": \"clement.vanstaen@gmail.com\"\n}"
				},
				"url": {
					"raw": "http://localhost:5017/mail/emailverify",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"mail",
						"emailverify"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL Querry: getUser",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdiNmViMjY3YmMzZDgwY2QxOTNkMGUiLCJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjA1MTkzMDMyLCJleHAiOjE2MDUxOTM5MzJ9.AyoSirRre9Y7Oojc2Cf9orma46CNnfBOAexNj7Spxt4",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getUser {\n    _id,\n    isAdmin,\n    adminRoles,\n    firstName,\n    lastName,\n    userName,\n    email,\n    description,\n    avatar,\n    emailSettings,\n    profilSettings,\n    verifiedEmail,\n    verifiedIdentity,\n    gender,\n    orientation,\n    wishes,\n    interests,\n    lastActive,\n    archived,\n    usernameChange,\n    comments {\n        _id,\n    },\n    events {\n        _id,\n    },\n    messages {\n        _id,\n    },\n    notifications {\n        _id,\n    },\n    photos {\n        _id,\n    },\n    visitors {\n        _id,\n    },\n    friends {\n        userName,\n        avatar,\n    },\n    followers {\n        userName,\n        avatar,\n    },\n    followed {\n        userName,\n        avatar,\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getUsers",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdiNmViMjY3YmMzZDgwY2QxOTNkMGUiLCJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjA1MTkzMDMyLCJleHAiOjE2MDUxOTM5MzJ9.AyoSirRre9Y7Oojc2Cf9orma46CNnfBOAexNj7Spxt4",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getUsers {\n    _id,\n    isPartner,\n    partnerRoles,\n    firstName,\n    lastName,\n    userName,\n    email,\n    description,\n    avatar,\n    emailSettings,\n    profilSettings,\n    verifiedEmail,\n    verifiedIdentity,\n    gender,\n    orientation,\n    wishes,\n    interests,\n    lastActive,\n    archived,\n    usernameChange,\n    language,\n    deleted,\n    suspended,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL Querry: getProfileByName",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdiNmViMjY3YmMzZDgwY2QxOTNkMGUiLCJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjA1MTkzMDMyLCJleHAiOjE2MDUxOTM5MzJ9.AyoSirRre9Y7Oojc2Cf9orma46CNnfBOAexNj7Spxt4",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getProfileByName (userName: \"dieTruhe\") {\n    firstName,\n    avatar,\n    gender,\n    lastActive,\n    profilSettings,\n    items {\n        _id,\n        title,\n        mediaUrlMedium,\n        likes, \n        dislikes,\n    },\n    looks {\n        _id,\n        title,\n        mediaUrlMedium,\n        likes, \n        dislikes,\n    },\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL Querry: getProfileById",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdiNmViMjY3YmMzZDgwY2QxOTNkMGUiLCJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjA1MTkzMDMyLCJleHAiOjE2MDUxOTM5MzJ9.AyoSirRre9Y7Oojc2Cf9orma46CNnfBOAexNj7Spxt4",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getProfileById (_id: 5) {\n    _id,\n    firstName,\n    lastName,\n    userName,\n    email,\n    description,\n    avatar,\n    verifiedEmail,\n    verifiedIdentity,\n    gender,\n    orientation,\n    wishes,\n    interests,\n    comments {\n        _id,\n    }\n    events {\n        _id,\n    }\n    messages {\n        _id,\n    }\n    notifications {\n        _id,\n    }\n    photos {\n        _id,\n    }\n    visitors {\n        _id,\n    }\n    friends {\n        userName,\n        avatar,\n    },\n    followers {\n        userName,\n        avatar,\n    },\n    followed {\n        userName,\n        avatar,\n    },\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addUser",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addUser (\n    userInput: { \n        firstName: \"test\", \n        lastName: \"test\", \n        userName: \"test\", \n        email: \"test.test@test.com\", \n        password: \"123456\"\n        }\n  ) {\n    _id\n    email\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: updateUser",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateUser (\n      userInput: { \n        gender: \"male\",\n        orientation: \"hetero\", \n        wishes: [\"first\", \"second\", \"third\"],\n        interests: [\"one\", \"two\"]\n        }\n      ) {\n    _id,\n    gender,\n    orientation,\n    wishes,\n    interests,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getPhotos",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getPhotos {\n    _id,\n    photoUrl,\n    photoUrlThumb,\n    photoUrlThumbBlur,\n    flagOver18,\n    tags,\n    likes,\n    private,\n    user {\n        _id,\n    },\n    comment {\n        _id,\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addPhoto",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addPhoto (\n    photoInput: { \n        photoUrl: \"some/url\",\n        photoUrlThumb: \"some/url/thumb\",\n        photoUrlThumbBlur: \"some/url/blur\",\n        flagOver18: true,\n        private: true,\n        }\n  ) {\n    _id,\n    \n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: updatePhoto",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updatePhoto (\n      photoId: 1,\n      photoInput: { \n        private: true,\n        archived: false, \n        tags: [\"first\", \"second\", \"third\"],\n        likes: [1, 2]\n        }\n      ) {\n    _id,\n    private,\n    archived,\n    likes,\n    tags,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: deletePhoto",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  deletePhoto (photoId: 2)\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getComments",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getComments (photoId: 1) {\n    _id,\n    comment,\n    likes,\n    dislikes,\n    user {\n        _id,\n    },\n    photo {\n        _id,\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addComment",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addComment (\n    commentInput: { \n        photoId: 1,\n        comment: \"this is a new comment\",\n        }\n  ) {\n    _id,    \n    comment,\n    likes,\n    dislikes,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: updateComment",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateComment (\n      commentId: 1,\n      commentInput: { \n        comment: \"comment updated\", \n        likes: [1, 2],\n        dislikes: [3, 4],\n        }\n      ) {\n    _id,\n    comment,\n    likes,\n    dislikes,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: deleteComment",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  deleteComment (commentId: 2)\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getVisitor",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getVisitor {\n    visitorId,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addVisitor",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addVisitor (\n    visitedId: 4,\n  ) {\n    userId,\n    visitorId,\n    visitedId,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getEvent",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getEvent (eventId: 1) {\n    _id,\n    eventType,\n    title,\n    description,\n    picture,\n    location,\n    fromDate,\n    untilDate,\n    attendees,\n    invited,\n    admin,\n    private,\n    forwardable,\n    allowAnonymous,\n    createdAt,\n    updatedAt,\n    user {\n        _id,\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getAllEvents",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getAllEvents {\n    _id,\n    eventType,\n    title,\n    description,\n    pictures,\n    location,\n    locationAdress,\n    locationCoordinates,\n    locationName,\n    fromDate,\n    untilDate,\n    eventTags,\n    attendees,\n    invited,\n    admin,\n    private,\n    forwardable,\n    allowAnonymous,\n    createdAt,\n    updatedAt,\n    user {\n        _id,\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addEvent",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addEvent (\n    eventInput: { \n        eventType: \"Party\",\n        title: \"This is a cool party\",\n        description: \"This is a cool party, and I am describing it.\",\n        picture: \"some/url/to/s3\",\n        location: \"berlin\",\n        fromDate: \"12/07/21 21:00\",\n        untilDate:  \"13/07/21 07:00\",\n        admin: [1, 2],\n        private: true,\n        forwardable: false,\n        allowAnonymous: false,\n        }\n  ) {\n    _id,\n    eventType,\n    title,\n    description,\n    picture,\n    location,\n    fromDate,\n    untilDate,\n    attendees,\n    invited,\n    admin,\n    private,\n    forwardable,\n    allowAnonymous,\n    createdAt,\n    updatedAt,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: updateEvent",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateEvent (\n      eventId: 1,\n      eventInput: { \n        location: \"kreuzberg\",\n        private: false, \n        eventType: \"Data\",\n        title: \"This is now a date \",\n        description: \"This is a cool Date, and I am describing it.\",\n        }\n      ) {\n_id,\n    eventType,\n    title,\n    description,\n    picture,\n    location,\n    fromDate,\n    untilDate,\n    attendees,\n    invited,\n    admin,\n    private,\n    forwardable,\n    allowAnonymous,\n    createdAt,\n    updatedAt,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: deleteEvent",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  deleteEvent (eventId: 2)\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getNotifications",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getNotifications {\n    _id,\n    notification,\n    photoLinkId,\n    userLinkId,\n    eventLinkId,\n    notificationType,\n    seen,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addNotifications",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addNotification (\n    notificationInput: { \n        notification: \"You got a mail\",\n        notificationType: \"email\",\n        }\n  ) {\n      _id,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: updateNotification",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateNotification (\n        notificationId: 3,\n        seen: true,\n  ) {\n      _id,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getChat",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getChats (userId: 1) {\n    _id,\n    userlist,\n    archived,\n    createdAt,\n    updatedAt,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: createChat",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  createChat (\n    chatInput: { \n        userlist: [1,3],\n        }\n  ) {\n    _id,\n    userlist,\n    archived,\n    createdAt,\n    updatedAt,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: archiveChat",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  archiveChat (chatId: 1) {\n    _id,\n    userlist,\n    archived,\n    createdAt,\n    updatedAt,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getMessages",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getMessages (chatId: 1) {\n    _id,\n    message,\n    attachedPhotoUrl,\n    createdAt,\n    updatedAt,\n    chat {\n        _id,\n    }\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addMessage",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addMessage (\n    chatId: 1,\n    messageInput: { \n        message: \"This is a message\",\n        attachedPhotoUrl: \"some/Url\"\n        }\n  ) {\n    _id,\n    userId,\n    chatId,\n    message,\n    attachedPhotoUrl,\n    createdAt,\n    updatedAt,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: deleteMessage",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  deleteMessage (messageId: 2)\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getSubscribers",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdiNmViMjY3YmMzZDgwY2QxOTNkMGUiLCJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjA1MTkzMDMyLCJleHAiOjE2MDUxOTM5MzJ9.AyoSirRre9Y7Oojc2Cf9orma46CNnfBOAexNj7Spxt4",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getSubscribers {\n    _id,\n    username,\n    email,\n    interests,\n    lists,\n    about,\n    verifiedEmail,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addSubscriber",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addSubscriber (\n    subscriberInput: { \n        username: \"test\", \n        email: \"test.test@test.com\", \n        lists: [\"parties\", \"deals\", \"extravaganzas\"],\n        language: \"en\",\n        }\n\n  ) {\n    _id\n    name\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: updateSubscriber",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateSubscriber (\n      subscriberId: 1,\n      subscriberInput: { \n        name: \"name\",\n        }\n      ) {\n    _id,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: deleteSubscriber",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  deleteSubscriber (\n      subscriberId: 1,\n      ) \n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getEventTypes",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdiNmViMjY3YmMzZDgwY2QxOTNkMGUiLCJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjA1MTkzMDMyLCJleHAiOjE2MDUxOTM5MzJ9.AyoSirRre9Y7Oojc2Cf9orma46CNnfBOAexNj7Spxt4",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getEventTypes {\n    _id,\n    name,\n    validated,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addEventType",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addEventType (\n    eventTypeInput: { \n        name: \"delete me\", \n        }\n  ) {\n    _id\n    name\n    validated\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: updateEventType",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateEventType (\n    eventTypeId: \"1\",\n    eventTypeInput: { \n        name: \"{en: 'date', de: 'date'}\",\n        validated: true, \n        }\n  ) {\n    _id\n    name\n    validated\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: deleteEventType",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  deleteEventType (\n    eventTypeId: \"2\",\n  ) \n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getTags",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdiNmViMjY3YmMzZDgwY2QxOTNkMGUiLCJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjA1MTkzMDMyLCJleHAiOjE2MDUxOTM5MzJ9.AyoSirRre9Y7Oojc2Cf9orma46CNnfBOAexNj7Spxt4",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getTags {\n    _id,\n    name,\n    isUserTag,\n    isEventTag,\n    isPictureTag,\n    validated,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addTag",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addTag (\n    tagInput: { \n        name: \"delete me\", \n        isUserTag: false,\n        isEventTag: true,\n        isPictureTag: true,\n        }\n  ) {\n    _id\n    name\n    isUserTag\n    isEventTag\n    isPictureTag\n    validated\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: updateTag",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateTag (\n    tagId: \"1\",\n    tagInput: { \n        validated: true,\n        }\n  ) {\n    _id\n    name\n    isUserTag\n    isEventTag\n    isPictureTag\n    validated\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: deleteTag",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  deleteTag (\n    tagId: \"2\"\n  )\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getTags",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdiNmViMjY3YmMzZDgwY2QxOTNkMGUiLCJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjA1MTkzMDMyLCJleHAiOjE2MDUxOTM5MzJ9.AyoSirRre9Y7Oojc2Cf9orma46CNnfBOAexNj7Spxt4",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getTags {\n    _id,\n    name,\n    isUserTag,\n    isEventTag,\n    isPictureTag,\n    validated,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addTag",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addTag (\n    tagInput: { \n        name: \"delete me\", \n        isUserTag: false,\n        isEventTag: true,\n        isPictureTag: true,\n        }\n  ) {\n    _id\n    name\n    isUserTag\n    isEventTag\n    isPictureTag\n    validated\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: updateTag",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateTag (\n    tagId: \"1\",\n    tagInput: { \n        validated: true,\n        }\n  ) {\n    _id\n    name\n    isUserTag\n    isEventTag\n    isPictureTag\n    validated\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: deleteTag",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  deleteTag (\n    tagId: \"2\"\n  )\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getLocation",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdiNmViMjY3YmMzZDgwY2QxOTNkMGUiLCJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjA1MTkzMDMyLCJleHAiOjE2MDUxOTM5MzJ9.AyoSirRre9Y7Oojc2Cf9orma46CNnfBOAexNj7Spxt4",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getLocation (\n    locationId: \"1\"\n  )\n  {\n    _id,\n    name,\n    description,\n    pictures,\n    links,\n    address,\n    coordinates,\n    validated,\n    reviews,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL Query: getLocations",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI1ZjdiNmViMjY3YmMzZDgwY2QxOTNkMGUiLCJlbWFpbCI6ImNsZW1lbnQudmFuc3RhZW5AZ21haWwuY29tIiwiaWF0IjoxNjA1MTkzMDMyLCJleHAiOjE2MDUxOTM5MzJ9.AyoSirRre9Y7Oojc2Cf9orma46CNnfBOAexNj7Spxt4",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query {\n  getLocations {\n    _id,\n    name,\n    description,\n    pictures,\n    links,\n    address,\n    coordinates,\n    validated,\n    reviews,\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: addLocation",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  addLocation (\n    locationInput: { \n        name: \"Kitkat club\", \n        }\n  ) {\n    _id\n    name\n    description\n    pictures\n    links\n    address\n    coordinates\n    validated\n    reviews\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: updateLocation",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  updateLocation (\n    locationId: \"2\",\n    locationInput: { \n        name: \"delete me\", \n        }\n  ) {\n    _id\n    name\n    description\n    pictures\n    links\n    address\n    coordinates\n    validated\n    reviews\n  }\n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		},
		{
			"name": "GraphQL Mutation: deleteLocation",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "Bearer 123456789",
						"type": "text"
					}
				],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation {\n  deleteLocation (\n    locationId: \"2\"\n  ) \n}",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:5017/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5017",
					"path": [
						"graphql"
					]
				},
				"description": "Post request : new user (format Json)\nTo localserver on port 5000"
			},
			"response": []
		}
	]
}